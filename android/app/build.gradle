def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def debugKeystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def oKeystorePropertiesFile = rootProject.file('okey.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
if (oKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(oKeystorePropertiesFile))
}

android {
    compileSdkVersion 33
    configurations { implementation.exclude group: 'org.jetbrains', module: 'annotations' }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false

    }

    defaultConfig {
        applicationId "com.fraazo.delivery"
        minSdkVersion 21
        targetSdkVersion 30
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }


    flavorDimensions "app"

    productFlavors {
        production {
            dimension "app"
            applicationId "com.fraazo.delivery"
        }
        staging {
            dimension "app"
            applicationId "com.fraazo.delivery.staging"
        }
    }


    signingConfigs {
        release {
             keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']


        }

    }


    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {

            signingConfig signingConfigs.release
        }
        profile {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "zendesk.messaging:messaging-android:1.1.0"
    implementation(name:'KNOW-v5.19.1', ext:'aar')

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.browser:browser:1.4.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-core:20.1.2'
    implementation 'com.google.firebase:firebase-database:20.0.4'
    implementation 'com.google.firebase:firebase-storage:20.0.1'
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.google.firebase:firebase-analytics:20.1.2'
    implementation 'com.google.firebase:firebase-messaging:23.0.3'
    implementation 'com.parse.bolts:bolts-tasks:1.4.0'
    implementation 'com.parse.bolts:bolts-applinks:1.4.0'
    implementation 'me.gujun.android.taggroup:library:1.4@aar'
    implementation 'com.google.android.exoplayer:exoplayer:2.17.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.mobstac.beaconstac:proximity:3.33'
    implementation 'com.google.android.gms:play-services-nearby:18.1.0'
    implementation 'com.github.LogentriesCommunity:le_android:4.1.0'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.12.0'
    implementation 'com.github.davidpizarro:autolabelui:1.0.1'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'org.jetbrains:annotations-java5:15.0'
    implementation 'com.facebook.fresco:fresco:2.0.0'
    implementation 'com.facebook.fresco:animated-gif:1.10.0'
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.2'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.firebase:firebase-ml-vision:24.1.0'
    implementation 'com.google.firebase:firebase-ml-vision-automl:18.0.6'
    implementation "androidx.core:core-ktx:+"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.firebase:firebase-common-ktx:20.1.0'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'




